import asyncio
import config
from function import *
# 변수들
frames = []
is_recording = [False]
transcription_result = ""  

async def main_2():
    file_path = await capture_image()
    encoded_image = encode_image(file_path)
    result = await send_image_to_chatgpt(encoded_image, config.API_KEY, transcription_result)
    result_last = result['choices'][0]['message']['content']
    print(result_last)
    await poi_tts(result_last,"response.mp3", CREDENTIALS_PATH)

async def main():
    global transcription_result

    print("녹음을 시작합니다.")
    start_recording(frames, is_recording)
    await asyncio.sleep(2)
    stop_recording(is_recording)

    transcription_result = await transcribe_audio(frames, config.CREDENTIALS_PATH)
    await main_2()

if __name__ == '__main__':
    try:
        asyncio.run(main())
    finally:
        print("프로그램을 종료합니다.")
        # 모든 스레드 종료
        import threading
        for thread in threading.enumerate():
            if thread != threading.main_thread():
                thread.join(timeout=1.0)
        # 모든 외부 리소스 해제
        cv2.destroyAllWindows()
        # 강제 종료
        import os, signal
        os.kill(os.getpid(), signal.SIGTERM)
